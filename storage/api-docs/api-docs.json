{
    "openapi": "3.0.0",
    "info": {
        "title": "Notes-API",
        "description": "Apis to build notes",
        "contact": {
            "email": "dburea01@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0",
        "x-logo": {
            "url": "https://via.placeholder.com/190x90.png?text=L5-Swagger"
        }
    },
    "paths": {
        "/api/v1/organizations": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get list of organizationss",
                "description": "Returns a list of organizations. You must be authenticated and you must have the <strong>SUPERADMIN</strong> role.",
                "operationId": "getOrganizationsList",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by the status of the organization",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ACTIVE",
                                "INACTIVE"
                            ]
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by the name of the organization",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Store new organization",
                "description": "Store a new organization. You must be authenticated and have the <strong>SUPERADMIN</strong> role.",
                "operationId": "storeOrganization",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOrganizationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/organizations/{id}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get organization information",
                "description": "Returns organization data",
                "operationId": "getOrganizationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Organization id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Update existing organization",
                "description": "Returns updated organization data",
                "operationId": "updateOrganization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Organization id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOrganizationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Delete existing organization",
                "description": "Deletes a record and returns no content. Be careful, the deletion deletes also all the childs by cascade (users, notes...)",
                "operationId": "deleteOrganization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Organization id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Organization": {
                "title": "Organization",
                "description": "Organization model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of the organization",
                        "type": "string",
                        "format": "uuid",
                        "example": "9ba9b105-c56b-4537-86c0-76b0034d1c41"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the organization",
                        "type": "string",
                        "example": "A nice organization"
                    },
                    "comment": {
                        "title": "Comment",
                        "description": "Comment of the organization",
                        "type": "string",
                        "example": "This is a comment ......"
                    },
                    "status": {
                        "title": "Status",
                        "description": "The status of the organization (ACTIVE / INACTIVE)",
                        "type": "string",
                        "example": "ACTIVE"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-03-28 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-03-28 17:54:34"
                    },
                    "created_by": {
                        "title": "Created by",
                        "description": "Created by",
                        "type": "string",
                        "example": "Dominique"
                    },
                    "updated_by": {
                        "title": "Updated by",
                        "description": "Updated by",
                        "type": "string",
                        "example": "Clément"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Project"
                }
            },
            "StoreOrganizationRequest": {
                "title": "StoreOrganizationrequest",
                "description": "Store Organization request body data",
                "required": [
                    "name",
                    "status"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new organization",
                        "type": "string",
                        "maxLength": 50,
                        "example": "A nice organization"
                    },
                    "comment": {
                        "title": "comment",
                        "description": "Comment of the new organization",
                        "type": "string",
                        "maxLength": 100,
                        "example": "This is new organization's comment"
                    },
                    "status": {
                        "title": "status",
                        "description": "Status of the new organization (ACTIVE / INACTIVE)",
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE"
                        ],
                        "example": "ACTIVE"
                    }
                },
                "type": "object"
            },
            "OrganizationResource": {
                "title": "OrganizationResource",
                "description": "Organization resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Organization"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OrganizationResource"
                }
            }
        }
    }
}